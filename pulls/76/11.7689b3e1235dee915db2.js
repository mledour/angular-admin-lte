(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{g38n:function(b,e,t){"use strict";t.r(e),t.d(e,"ConfigurationModule",function(){return d});var r=t("ofXK"),a=t("tyNb"),o=t("wZee"),i=t("fXoL"),l=t("R/To");const s=[{path:"",component:(()=>{class b{ngAfterViewInit(){o.highlightAll()}}return b.\u0275fac=function(e){return new(e||b)},b.\u0275cmp=i.Cb({type:b,selectors:[["app-configuration"]],decls:254,vars:14,consts:[["header","Configuring Layout",3,"isCollapsable","isRemovable"],["header","Configuration File",3,"isCollapsable","isRemovable"],[1,"language-typescript"],["header","Import Conf And Module",3,"isCollapsable","isRemovable"],["header","App view HTML",3,"isCollapsable","isRemovable"],[1,"language-html"],["header","Configuration properties","contentStyleClasses","table-responsive",3,"isCollapsable","isRemovable"],[1,"table","table-bordered","table-hover"],["header","Layout setters",3,"isCollapsable","isRemovable"],["header","Layout subscriptions",3,"isCollapsable","isRemovable"]],template:function(b,e){1&b&&(i.Pb(0,"mk-box",0),i.Pb(1,"p"),i.rc(2,"If can use the layout components or just use the presentation components of angular-admin-lte."),i.Ob(),i.Pb(3,"p"),i.rc(4," If you chose to use the layout you will need to:"),i.Ob(),i.Pb(5,"ol"),i.Pb(6,"li"),i.rc(7,"Create a layout configuration file."),i.Ob(),i.Pb(8,"li"),i.rc(9,"Import the layout module and provide the layout configuration in your main app module."),i.Ob(),i.Pb(10,"li"),i.rc(11,"Update the main app view."),i.Ob(),i.Ob(),i.Ob(),i.Pb(12,"mk-box",1),i.Pb(13,"pre"),i.Pb(14,"code",2),i.Jb(),i.rc(15,"export var adminLteConf = {\n  skin: 'blue',\n  ...\n  sidebarLeftMenu: [\n    {label: 'Start', route: '/', iconClasses: 'fa fa-th'},\n    ...\n  ]\n};\n"),i.Qb(),i.Ob(),i.Ob(),i.Ob(),i.Pb(16,"mk-box",3),i.Pb(17,"pre"),i.Pb(18,"code",2),i.rc(19,"import { adminLteConf } from './admin-lte.conf';   //Import the layout configuration.\nimport { LayoutModule } from 'angular-admin-lte';   //Import the layout module.\n\n@NgModule({\n  imports: [\n    ...\n    LayoutModule.forRoot(adminLteConf),   //Provide the configuration to the layout module.\n  ],\n  ...\n})\nexport class AppModule {}\n"),i.Ob(),i.Ob(),i.Ob(),i.Pb(20,"mk-box",4),i.Pb(21,"pre"),i.Pb(22,"code",5),i.rc(23,"<mk-layout-wrapper>\n  <mk-layout-sidebar-right>\n    Sidebar right HTML\n  </mk-layout-sidebar-right>\n  <mk-layout-header>\n    <mk-layout-header-logo>Logo HTML</mk-layout-header-logo>\n    <mk-layout-header-logo-mini>Logo Mini HTML</mk-layout-header-logo-mini>\n    Header HTML\n  </mk-layout-header>\n  <mk-layout-sidebar-left>\n    Sidebar left HTML (just above menu)\n  </mk-layout-sidebar-left>\n  <mk-layout-content>\n    <router-outlet></router-outlet>\n  </mk-layout-content>\n  <mk-layout-footer>\n    <mk-layout-footer-left>\n      Footer left HTML\n    </mk-layout-footer-left>\n    <mk-layout-footer-right>\n      Footer right HTML\n    </mk-layout-footer-right>\n  </mk-layout-footer>\n</mk-layout-wrapper>\n"),i.Ob(),i.Ob(),i.Ob(),i.Pb(24,"mk-box",6),i.Pb(25,"table",7),i.Pb(26,"tbody"),i.Pb(27,"tr"),i.Pb(28,"th"),i.rc(29,"Name"),i.Ob(),i.Pb(30,"th"),i.rc(31,"Type"),i.Ob(),i.Pb(32,"th"),i.rc(33,"Default"),i.Ob(),i.Pb(34,"th"),i.rc(35,"Description"),i.Ob(),i.Ob(),i.Pb(36,"tr"),i.Pb(37,"td"),i.rc(38,"skin"),i.Ob(),i.Pb(39,"td"),i.rc(40,"string ('blue' | 'black' | 'purple' | 'green' | 'red' | 'yellow' | 'blue-light' | 'black-light' | 'purple-light' | 'green-light' | 'red-light' | 'yellow-light')"),i.Ob(),i.Pb(41,"td"),i.rc(42,"'blue'"),i.Ob(),i.Pb(43,"td"),i.rc(44,"Set the theme skin."),i.Ob(),i.Ob(),i.Pb(45,"tr"),i.Pb(46,"td"),i.rc(47,"isSidebarLeftCollapsed"),i.Ob(),i.Pb(48,"td"),i.rc(49,"boolean"),i.Ob(),i.Pb(50,"td"),i.rc(51,"false"),i.Ob(),i.Pb(52,"td"),i.rc(53,"Defines if the sidebar left is collapsed."),i.Ob(),i.Ob(),i.Pb(54,"tr"),i.Pb(55,"td"),i.rc(56,"isSidebarLeftExpandOnOver"),i.Ob(),i.Pb(57,"td"),i.rc(58,"boolean"),i.Ob(),i.Pb(59,"td"),i.rc(60,"false"),i.Ob(),i.Pb(61,"td"),i.rc(62,"Define if sidebar left expand on mouse over."),i.Ob(),i.Ob(),i.Pb(63,"tr"),i.Pb(64,"td"),i.rc(65,"isSidebarLeftMini"),i.Ob(),i.Pb(66,"td"),i.rc(67,"boolean"),i.Ob(),i.Pb(68,"td"),i.rc(69,"false"),i.Ob(),i.Pb(70,"td"),i.rc(71,"Define if sidebar left minified is visible."),i.Ob(),i.Ob(),i.Pb(72,"tr"),i.Pb(73,"td"),i.rc(74,"sidebarRightSkin"),i.Ob(),i.Pb(75,"td"),i.rc(76,"string ('dark' | 'light')"),i.Ob(),i.Pb(77,"td"),i.rc(78,"'dark'"),i.Ob(),i.Pb(79,"td"),i.rc(80,"Set the sidebar right skin."),i.Ob(),i.Ob(),i.Pb(81,"tr"),i.Pb(82,"td"),i.rc(83,"isSidebarRightCollapsed"),i.Ob(),i.Pb(84,"td"),i.rc(85,"boolean"),i.Ob(),i.Pb(86,"td"),i.rc(87,"true"),i.Ob(),i.Pb(88,"td"),i.rc(89,"Defines if the sidebar right is collapsed."),i.Ob(),i.Ob(),i.Pb(90,"tr"),i.Pb(91,"td"),i.rc(92,"isSidebarRightOverContent"),i.Ob(),i.Pb(93,"td"),i.rc(94,"boolean"),i.Ob(),i.Pb(95,"td"),i.rc(96,"true"),i.Ob(),i.Pb(97,"td"),i.rc(98,"Defines if sidebar right slide over content."),i.Ob(),i.Ob(),i.Pb(99,"tr"),i.Pb(100,"td"),i.rc(101,"layout"),i.Ob(),i.Pb(102,"td"),i.rc(103,"string ('normal' | 'boxed' | 'fixed')"),i.Ob(),i.Pb(104,"td"),i.rc(105,"'normal'"),i.Ob(),i.Pb(106,"td"),i.rc(107,"Define the layout style."),i.Ob(),i.Ob(),i.Ob(),i.Ob(),i.Ob(),i.Pb(108,"mk-box",8),i.Pb(109,"table",7),i.Pb(110,"tbody"),i.Pb(111,"tr"),i.Pb(112,"th"),i.rc(113,"Name"),i.Ob(),i.Pb(114,"th"),i.rc(115,"Parameters"),i.Ob(),i.Pb(116,"th"),i.rc(117,"Description"),i.Ob(),i.Ob(),i.Pb(118,"tr"),i.Pb(119,"td"),i.rc(120,"sidebarLeftCollapsed()"),i.Ob(),i.Pb(121,"td"),i.rc(122,"boolean"),i.Ob(),i.Pb(123,"td"),i.rc(124,"Programmatically set if sidebar left is collapsed."),i.Ob(),i.Ob(),i.Pb(125,"tr"),i.Pb(126,"td"),i.rc(127,"sidebarLeftExpandOnOver()"),i.Ob(),i.Pb(128,"td"),i.rc(129,"boolean"),i.Ob(),i.Pb(130,"td"),i.rc(131,"Programmatically set if sidebar left expand on over."),i.Ob(),i.Ob(),i.Pb(132,"tr"),i.Pb(133,"td"),i.rc(134,"sidebarLeftExpandOnOver()"),i.Ob(),i.Pb(135,"td"),i.rc(136,"boolean"),i.Ob(),i.Pb(137,"td"),i.rc(138,"Programmatically set if sidebar left expand on over."),i.Ob(),i.Ob(),i.Pb(139,"tr"),i.Pb(140,"td"),i.rc(141,"setSidebarRightSkin()"),i.Ob(),i.Pb(142,"td"),i.rc(143,"'dark' | 'light'"),i.Ob(),i.Pb(144,"td"),i.rc(145,"Programmatically defines sidebar right skin."),i.Ob(),i.Ob(),i.Pb(146,"tr"),i.Pb(147,"td"),i.rc(148,"sidebarLeftMini()"),i.Ob(),i.Pb(149,"td"),i.rc(150,"boolean"),i.Ob(),i.Pb(151,"td"),i.rc(152,"Programmatically set if sidebar left collapsed is visible."),i.Ob(),i.Ob(),i.Pb(153,"tr"),i.Pb(154,"td"),i.rc(155,"sidebarRightCollapsed()"),i.Ob(),i.Pb(156,"td"),i.rc(157,"boolean"),i.Ob(),i.Pb(158,"td"),i.rc(159,"Programmatically set if sidebar right is collapsed."),i.Ob(),i.Ob(),i.Pb(160,"tr"),i.Pb(161,"td"),i.rc(162,"sidebarRightOverContent()"),i.Ob(),i.Pb(163,"td"),i.rc(164,"boolean"),i.Ob(),i.Pb(165,"td"),i.rc(166,"Programmatically set if sidebar right slide over content."),i.Ob(),i.Ob(),i.Pb(167,"tr"),i.Pb(168,"td"),i.rc(169,"setSidebarLeftMenu()"),i.Ob(),i.Pb(170,"td"),i.rc(171,"Array"),i.Ob(),i.Pb(172,"td"),i.rc(173,"Update sidebar right menu."),i.Ob(),i.Ob(),i.Pb(174,"tr"),i.Pb(175,"td"),i.rc(176,"setLayout()"),i.Ob(),i.Pb(177,"td"),i.rc(178,"string"),i.Ob(),i.Pb(179,"td"),i.rc(180,"Update layout style."),i.Ob(),i.Ob(),i.Pb(181,"tr"),i.Pb(182,"td"),i.rc(183,"setSkin()"),i.Ob(),i.Pb(184,"td"),i.rc(185,"string"),i.Ob(),i.Pb(186,"td"),i.rc(187,"Update theme skin."),i.Ob(),i.Ob(),i.Ob(),i.Ob(),i.Ob(),i.Pb(188,"mk-box",9),i.Pb(189,"table",7),i.Pb(190,"tbody"),i.Pb(191,"tr"),i.Pb(192,"th"),i.rc(193,"Name"),i.Ob(),i.Pb(194,"th"),i.rc(195,"Parameters"),i.Ob(),i.Pb(196,"th"),i.rc(197,"Description"),i.Ob(),i.Ob(),i.Pb(198,"tr"),i.Pb(199,"td"),i.rc(200,"isSidebarLeftCollapsed"),i.Ob(),i.Pb(201,"td"),i.rc(202,"Observable<boolean>"),i.Ob(),i.Pb(203,"td"),i.rc(204,"Subscribe to sidebar left collapse status."),i.Ob(),i.Ob(),i.Pb(205,"tr"),i.Pb(206,"td"),i.rc(207,"isSidebarLeftExpandOnOver"),i.Ob(),i.Pb(208,"td"),i.rc(209,"Observable<boolean>"),i.Ob(),i.Pb(210,"td"),i.rc(211,"Subscribe to sidebar left expand on over status."),i.Ob(),i.Ob(),i.Pb(212,"tr"),i.Pb(213,"td"),i.rc(214,"isSidebarLeftMini"),i.Ob(),i.Pb(215,"td"),i.rc(216,"Observable<boolean>"),i.Ob(),i.Pb(217,"td"),i.rc(218,"Subscribe to sidebar left mini status."),i.Ob(),i.Ob(),i.Pb(219,"tr"),i.Pb(220,"td"),i.rc(221,"sidebarRightSkin"),i.Ob(),i.Pb(222,"td"),i.rc(223,"Observable<string>"),i.Ob(),i.Pb(224,"td"),i.rc(225,"Subscribe to sidebar right skin."),i.Ob(),i.Ob(),i.Pb(226,"tr"),i.Pb(227,"td"),i.rc(228,"isSidebarRightCollapsed"),i.Ob(),i.Pb(229,"td"),i.rc(230,"Observable<boolean>"),i.Ob(),i.Pb(231,"td"),i.rc(232,"Subscribe to sidebar right collapsed status."),i.Ob(),i.Ob(),i.Pb(233,"tr"),i.Pb(234,"td"),i.rc(235,"isSidebarRightOverContent"),i.Ob(),i.Pb(236,"td"),i.rc(237,"Observable<Array>"),i.Ob(),i.Pb(238,"td"),i.rc(239,"Subscribe to sidebar right over content status."),i.Ob(),i.Ob(),i.Pb(240,"tr"),i.Pb(241,"td"),i.rc(242,"layout"),i.Ob(),i.Pb(243,"td"),i.rc(244,"Observable<string>"),i.Ob(),i.Pb(245,"td"),i.rc(246,"Subscribe to layout style changes."),i.Ob(),i.Ob(),i.Pb(247,"tr"),i.Pb(248,"td"),i.rc(249,"skin"),i.Ob(),i.Pb(250,"td"),i.rc(251,"Observable<string>"),i.Ob(),i.Pb(252,"td"),i.rc(253,"Subscribe to theme skin changes."),i.Ob(),i.Ob(),i.Ob(),i.Ob(),i.Ob()),2&b&&(i.cc("isCollapsable",!1)("isRemovable",!1),i.wb(12),i.cc("isCollapsable",!1)("isRemovable",!1),i.wb(4),i.cc("isCollapsable",!1)("isRemovable",!1),i.wb(4),i.cc("isCollapsable",!1)("isRemovable",!1),i.wb(4),i.cc("isCollapsable",!0)("isRemovable",!1),i.wb(84),i.cc("isCollapsable",!1)("isRemovable",!1),i.wb(80),i.cc("isCollapsable",!1)("isRemovable",!1))},directives:[l.h],encapsulation:2}),b})()}];let n=(()=>{class b{}return b.\u0275mod=i.Gb({type:b}),b.\u0275inj=i.Fb({factory:function(e){return new(e||b)},imports:[[a.i.forChild(s)],a.i]}),b})(),d=(()=>{class b{}return b.\u0275mod=i.Gb({type:b}),b.\u0275inj=i.Fb({factory:function(e){return new(e||b)},imports:[[r.b,n,l.m]]}),b})()}}]);